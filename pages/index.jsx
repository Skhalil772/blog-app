import Head from "next/head";
// import { getServerSideProps } from "next";

// import { Inter } from "@next/font/google";
import Navbar from "@/components/Navbar";
import User from "@/components/user";
import { useEffect, useState } from "react";
import axios from "axios";
import Postitem from "@/components/Postitem";
import Link from "next/link";
import Footer from "@/components/Footer";
import img from "../public/article_pic.svg";
import Image from "next/image";

// const inter = Inter({ subsets: ["latin"] });

export default function Home({ posts }) {
	const [text, setText] = useState("");
	// console.log(posts);
	const url = `http://localhost:3000/posts/search?q=${text}`;
	return (
		<>
			<Head>
				<title>Kelvin's Blog</title>
				<meta
					name="description"
					content="Generated by create next app"
				/>
				<meta
					name="viewport"
					content="width=device-width, initial-scale=1"
				/>
				<link
					rel="icon"
					href="/favicon.ico"
				/>
			</Head>

			<Navbar />
			<section className="pt-20  container mx-auto">
				<main className="flex flex-col md:flex-row justify-center items-center px-8 gap-8 md:grid-cols-2">
					<div className="md:text-left text-center flex flex-col gap-8 md:w-1/2">
						<h1 className="font-semibold ">
							Read the most <br /> interesting articles
						</h1>
						<p className="text-lg">
							Lorem ipsum dolor sit amet consectetur adipisicing elit.
							Necessitatibus incidunt temporibus possimus odio ipsum quae id
							eligendi amet voluptatibus veritatis.
						</p>
						<form className="flex items-center w-full  md:w-fit">
							<label
								htmlFor="simple-search"
								className="sr-only">
								Search
							</label>
							<div className="relative w-full">
								<div className="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
									<svg
										aria-hidden="true"
										className="w-5 h-5 text-gray-500 dark:text-gray-400"
										fill="currentColor"
										viewBox="0 0 20 20"
										xmlns="http://www.w3.org/2000/svg">
										<path
											fillRule="evenodd"
											d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z"
											clipRule="evenodd"></path>
									</svg>
								</div>
								<input
									onChange={(e) => setText(e.target.value)}
									value={text}
									type="text"
									id="simple-search"
									className="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full pl-10 p-2.5  dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
									placeholder="Search"
								/>
							</div>
							<Link
								href={url}
								type="submit"
								className="p-2.5 ml-2 text-sm font-medium text-white bg-blue-700 rounded-lg border border-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">
								<svg
									className="w-5 h-5"
									fill="none"
									stroke="currentColor"
									viewBox="0 0 24 24"
									xmlns="http://www.w3.org/2000/svg">
									<path
										strokeLinecap="round"
										strokeLinejoin="round"
										strokeWidth="2"
										d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
								</svg>
								<span className="sr-only">Search</span>
							</Link>
						</form>
					</div>
					<div className="mb-12 w-1/2  md:w-1/3">
						<Image
							priority
							src={img}
							alt="header image"
						/>
					</div>
				</main>
			</section>
			<p
				className="font-semibold text-2xl underline md:pt-12  pb-12 px-12
				">
				Recently Posted
			</p>
			<section className="container mx-auto px-6 ">
				<main className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 ">
					{posts.map((a) => (
						<Postitem
							data={a}
							key={a._id}
						/>
					))}
				</main>
			</section>
			<Footer />
		</>
	);
}
export async function getStaticProps() {
	// Call an external API endpoint to get posts.
	// You can use any data fetching library
	const res = await axios.get("http://localhost:5000/api/v1/posts");
	const posts = await res.data;
	console.log(posts);

	// By returning { props: { posts } }, the Blog component
	// will receive `posts` as a prop at build time
	return {
		props: {
			posts,
		},
	};
}
// export const getServerSideProps = async () => {
// 	// Fetch data from an API or database
// 	const res = await fetch("http://localhost:5000/api/v1/users/");
// 	const data = await res.json();

// 	// Return the props to pass to the page component
// 	return { props: { data } };
// };

//<>
// 	<Head>
// 		<title>My First App</title>
// 		<meta
// 			name="description"
// 			content="Generated by create next app"
// 		/>
// 		<meta
// 			name="viewport"
// 			content="width=device-width, initial-scale=1"
// 		/>
// 		<link
// 			rel="icon"
// 			href="/favicon.ico"
// 		/>
// 	</Head>

// 	<Navbar />
// 	<User />
// </>
